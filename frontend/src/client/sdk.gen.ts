// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { OptionsApiLoginUsersData, OptionsApiLoginUsersResponse, PostApiLoginUsersData, PostApiLoginUsersResponse, OptionsApiQuestionCreateQuestionsData, OptionsApiQuestionCreateQuestionsResponse, PostApiQuestionCreateQuestionsData, PostApiQuestionCreateQuestionsResponse, GetApiQuestionQuestionsResponse, OptionsApiQuestionQuestionsResponse, OptionsApiUserCreateUserData, OptionsApiUserCreateUserResponse, PostApiUserCreateUserData, PostApiUserCreateUserResponse, DeleteApiUserDeleteUserData, DeleteApiUserDeleteUserResponse, OptionsApiUserDeleteUserData, OptionsApiUserDeleteUserResponse, OptionsApiUserUpdateUserData, OptionsApiUserUpdateUserResponse, PatchApiUserUpdateUserData, PatchApiUserUpdateUserResponse, GetApiUserUserByEmailData, GetApiUserUserByEmailResponse, OptionsApiUserUserByEmailData, OptionsApiUserUserByEmailResponse, GetApiUserUsersResponse, OptionsApiUserUsersResponse } from './types.gen';

export class LoginService {
    /**
     * Login to get token(email)
     * @param data The data for the request.
     * @param data.body
     * @returns Login
     * @throws ApiError
     */
    public static optionsApiLoginUsers(data: OptionsApiLoginUsersData = {}): CancelablePromise<OptionsApiLoginUsersResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/login/users',
            body: data.body
        });
    }
    
    /**
     * Login to get token(email)
     * @param data The data for the request.
     * @param data.body
     * @returns Login
     * @throws ApiError
     */
    public static postApiLoginUsers(data: PostApiLoginUsersData = {}): CancelablePromise<PostApiLoginUsersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/login/users',
            body: data.body
        });
    }
    
}

export class QuestionsService {
    /**
     * Create the questions
     * @param data The data for the request.
     * @param data.body
     * @returns Question
     * @throws ApiError
     */
    public static optionsApiQuestionCreateQuestions(data: OptionsApiQuestionCreateQuestionsData = {}): CancelablePromise<OptionsApiQuestionCreateQuestionsResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/question/create_questions',
            body: data.body
        });
    }
    
    /**
     * Create the questions
     * @param data The data for the request.
     * @param data.body
     * @returns Question
     * @throws ApiError
     */
    public static postApiQuestionCreateQuestions(data: PostApiQuestionCreateQuestionsData = {}): CancelablePromise<PostApiQuestionCreateQuestionsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/question/create_questions',
            body: data.body
        });
    }
    
    /**
     * Retrieve the questions
     * @returns Question
     * @throws ApiError
     */
    public static getApiQuestionQuestions(): CancelablePromise<GetApiQuestionQuestionsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/question/questions'
        });
    }
    
    /**
     * Retrieve the questions
     * @returns Question
     * @throws ApiError
     */
    public static optionsApiQuestionQuestions(): CancelablePromise<OptionsApiQuestionQuestionsResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/question/questions'
        });
    }
    
}

export class UsersService {
    /**
     * Create the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static optionsApiUserCreateUser(data: OptionsApiUserCreateUserData = {}): CancelablePromise<OptionsApiUserCreateUserResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/user/create_user',
            body: data.body
        });
    }
    
    /**
     * Create the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static postApiUserCreateUser(data: PostApiUserCreateUserData = {}): CancelablePromise<PostApiUserCreateUserResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/user/create_user',
            body: data.body
        });
    }
    
    /**
     * Delete the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static deleteApiUserDeleteUser(data: DeleteApiUserDeleteUserData = {}): CancelablePromise<DeleteApiUserDeleteUserResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/api/user/delete_user',
            body: data.body
        });
    }
    
    /**
     * Delete the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static optionsApiUserDeleteUser(data: OptionsApiUserDeleteUserData = {}): CancelablePromise<OptionsApiUserDeleteUserResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/user/delete_user',
            body: data.body
        });
    }
    
    /**
     * Update the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static optionsApiUserUpdateUser(data: OptionsApiUserUpdateUserData = {}): CancelablePromise<OptionsApiUserUpdateUserResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/user/update_user',
            body: data.body
        });
    }
    
    /**
     * Update the users
     * @param data The data for the request.
     * @param data.body
     * @returns User
     * @throws ApiError
     */
    public static patchApiUserUpdateUser(data: PatchApiUserUpdateUserData = {}): CancelablePromise<PatchApiUserUpdateUserResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/api/user/update_user',
            body: data.body
        });
    }
    
    /**
     * get the current user by Email
     * @param data The data for the request.
     * @param data.email
     * @returns User
     * @throws ApiError
     */
    public static getApiUserUserByEmail(data: GetApiUserUserByEmailData): CancelablePromise<GetApiUserUserByEmailResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/user/user/{email}',
            path: {
                email: data.email
            }
        });
    }
    
    /**
     * get the current user by Email
     * @param data The data for the request.
     * @param data.email
     * @returns User
     * @throws ApiError
     */
    public static optionsApiUserUserByEmail(data: OptionsApiUserUserByEmailData): CancelablePromise<OptionsApiUserUserByEmailResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/user/user/{email}',
            path: {
                email: data.email
            }
        });
    }
    
    /**
     * Retrieve the users
     * @returns User
     * @throws ApiError
     */
    public static getApiUserUsers(): CancelablePromise<GetApiUserUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/user/users'
        });
    }
    
    /**
     * Retrieve the users
     * @returns User
     * @throws ApiError
     */
    public static optionsApiUserUsers(): CancelablePromise<OptionsApiUserUsersResponse> {
        return __request(OpenAPI, {
            method: 'OPTIONS',
            url: '/api/user/users'
        });
    }
    
}